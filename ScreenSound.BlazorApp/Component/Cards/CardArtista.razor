@inject NavigationManager Navigation
@inject IDialogService DialogService

<MudItem xs="2">
    <MudCard >
        <MudCardMedia Image=@Imagem Height="300" />
        <MudCardHeader>
            <CardHeaderContent>
                <MudText Typo="Typo.h6">@Artista!.Nome</MudText>
            </CardHeaderContent>
            <CardHeaderActions>
                <MudIconButton Title="Detalhes" Icon="@Icons.Material.Filled.Info" Color="Color.Default" />
            </CardHeaderActions>
        </MudCardHeader>
        <MudCardContent>
            <MudText Typo="Typo.body2">@Artista!.Bio</MudText>
        </MudCardContent>
        <MudCardActions>
            <MudButton @onclick="() => ConfirmarExclusao(Artista!)"
                       Variant="Variant.Text"
                       Color="Color.Secondary">
                Excluir
            </MudButton>
            <MudSpacer></MudSpacer>
            <MudRating SelectedValue="2" />
        </MudCardActions>
    </MudCard>
</MudItem>

@code {
        [Parameter]
        public Artista? Artista { get; set; }       

        public string Imagem => $"https://localhost:7016/{Artista!.FotoPerfil}";

        private void ConfirmarExclusao(Artista artista)
        {
            var parameters = new DialogParameters<DialogScreenSoundDeleteArtista>();
            parameters.Add(x => x.ContentText, $"Deseja realmente excluir {artista.Nome}? O artista será excluído da base de dados.");
            parameters.Add(x => x.ButtonText, "Excluir");
            parameters.Add(x => x.Color, Color.Error);
            parameters.Add(x=> x.artista, artista);
            var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraSmall };
            DialogService.Show<DialogScreenSoundDeleteArtista>("Excluir Artista", parameters, options);
        }

     
}
